<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-28T18:53:07 GST" name="Suite" finished-at="2024-08-28T18:53:42 GST" duration-ms="34936">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorMessageValidationsTest.loginErrorValidation()[pri:0, instance:com.scompany.Tests.ErrorMessageValidationsTest@14dd7b39]" name="loginErrorValidation" class="com.scompany.Tests.ErrorMessageValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:com.scompany.Tests.SubmitOrderTest@7a5ceedd]" name="submitOrder" class="com.scompany.Tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-08-28T18:53:07 GST" name="Error Message Validations Test" finished-at="2024-08-28T18:53:32 GST" duration-ms="24891">
      <class name="com.scompany.Tests.ErrorMessageValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.scompany.Tests.ErrorMessageValidationsTest@14dd7b39]" started-at="2024-08-28T18:53:07 GST" name="launchApplication" finished-at="2024-08-28T18:53:13 GST" duration-ms="5807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:com.scompany.Tests.ErrorMessageValidationsTest@14dd7b39]" started-at="2024-08-28T18:53:13 GST" name="loginErrorValidation" finished-at="2024-08-28T18:53:14 GST" duration-ms="689" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.scompany.Tests.ErrorMessageValidationsTest.loginErrorValidation(ErrorMessageValidationsTest.java:20)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:com.scompany.Tests.ErrorMessageValidationsTest@14dd7b39]" started-at="2024-08-28T18:53:14 GST" name="closeApplication" finished-at="2024-08-28T18:53:15 GST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.scompany.Tests.ErrorMessageValidationsTest@14dd7b39]" started-at="2024-08-28T18:53:15 GST" name="launchApplication" finished-at="2024-08-28T18:53:18 GST" duration-ms="3261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:com.scompany.Tests.ErrorMessageValidationsTest@14dd7b39]" started-at="2024-08-28T18:53:18 GST" name="productErrorValidation" finished-at="2024-08-28T18:53:32 GST" duration-ms="14183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:com.scompany.Tests.ErrorMessageValidationsTest@14dd7b39]" started-at="2024-08-28T18:53:32 GST" name="closeApplication" finished-at="2024-08-28T18:53:32 GST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- com.scompany.Tests.ErrorMessageValidationsTest -->
    </test> <!-- Error Message Validations Test -->
    <test started-at="2024-08-28T18:53:07 GST" name="Submit Order Test" finished-at="2024-08-28T18:53:42 GST" duration-ms="34936">
      <class name="com.scompany.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.scompany.Tests.SubmitOrderTest@7a5ceedd]" started-at="2024-08-28T18:53:08 GST" name="launchApplication" finished-at="2024-08-28T18:53:14 GST" duration-ms="6090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:com.scompany.Tests.SubmitOrderTest@7a5ceedd]" started-at="2024-08-28T18:53:14 GST" name="submitOrder" data-provider="getData" finished-at="2024-08-28T18:53:17 GST" duration-ms="3139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Sheza@123, itemName=ZARA COAT 3, email=saj@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:com.scompany.Tests.SubmitOrderTest@7a5ceedd]" started-at="2024-08-28T18:53:17 GST" name="closeApplication" finished-at="2024-08-28T18:53:17 GST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.scompany.Tests.SubmitOrderTest@7a5ceedd]" started-at="2024-08-28T18:53:17 GST" name="launchApplication" finished-at="2024-08-28T18:53:22 GST" duration-ms="5043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:com.scompany.Tests.SubmitOrderTest@7a5ceedd]" started-at="2024-08-28T18:53:22 GST" name="submitOrder" data-provider="getData" finished-at="2024-08-28T18:53:37 GST" duration-ms="14852" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, itemName=ADIDAS ORIGINAL, email=anshika@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:com.scompany.Tests.SubmitOrderTest@7a5ceedd]" started-at="2024-08-28T18:53:37 GST" name="closeApplication" finished-at="2024-08-28T18:53:37 GST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:com.scompany.Tests.SubmitOrderTest@7a5ceedd]" started-at="2024-08-28T18:53:37 GST" name="launchApplication" finished-at="2024-08-28T18:53:41 GST" duration-ms="4282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistory()[pri:0, instance:com.scompany.Tests.SubmitOrderTest@7a5ceedd]" started-at="2024-08-28T18:53:41 GST" name="orderHistory" finished-at="2024-08-28T18:53:42 GST" depends-on-methods="com.scompany.Tests.SubmitOrderTest.submitOrder" duration-ms="767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistory -->
        <test-method is-config="true" signature="closeApplication()[pri:0, instance:com.scompany.Tests.SubmitOrderTest@7a5ceedd]" started-at="2024-08-28T18:53:42 GST" name="closeApplication" finished-at="2024-08-28T18:53:42 GST" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- com.scompany.Tests.SubmitOrderTest -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
